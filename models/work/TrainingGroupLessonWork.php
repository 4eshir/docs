<?php

namespace app\models\work;

use app\models\common\Auditorium;
use app\models\common\Branch;
use app\models\common\TrainingGroup;
use app\models\common\TrainingGroupLesson;
use Yii;


class TrainingGroupLessonWork extends TrainingGroupLesson
{
    public $auds;

    public function rules()
    {
        return [
            [['lesson_date', 'lesson_start_time', 'lesson_end_time'], 'string'],
            [['duration', 'auditorium_id', 'training_group_id', 'branch_id'], 'integer'],
            ['auds', 'safe'],
            [['training_group_id'], 'exist', 'skipOnError' => true, 'targetClass' => TrainingGroup::className(), 'targetAttribute' => ['training_group_id' => 'id']],
            [['branch_id'], 'exist', 'skipOnError' => true, 'targetClass' => Branch::className(), 'targetAttribute' => ['branch_id' => 'id']],
        ];
    }

    public function getBranch()
    {
        return $this->hasOne(Branch::className(), ['id' => 'branch_id']);
    }

    public function getAuditorium()
    {
        return $this->hasOne(Auditorium::className(), ['id' => 'auditorium_id']);
    }

    public function getFullName()
    {
        $aud = $this->auditorium_id;
        if ($aud === null) return '--- ('.$this->branch->name.')';
        else return $this->auditorium->name.' ('.$this->branch->name.')';
    }

    public function checkValideTime($group_id)
    {
        $lessons = TrainingGroupLesson::find()->where(['!=', 'id', $this->id])->all();
        $result = [];
        foreach ($lessons as $lesson)
        {
            if (($this->lesson_start_time < $lesson->lesson_end_time && $this->lesson_end_time > $lesson->lesson_start_time) && $lesson->lesson_date == $this->lesson_date && $lesson->auditorium_id == $this->auditorium_id)
                $result[] = $lesson->id;
        }
        return $result;
    }

    public function beforeSave($insert)
    {
        $str = '+'.$this->trainingGroup->trainingProgram->hour_capacity.' minutes';
        $this->lesson_end_time = date("H:i", strtotime($str, strtotime($this->lesson_start_time)));
        $this->duration = 1;
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
}
