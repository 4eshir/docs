<?php

namespace app\models\work;

use app\models\common\Auditorium;
use app\models\common\Branch;
use app\models\common\People;
use Yii;
use yii\helpers\Html;


class BranchWork extends Branch
{
    public $auditoriums;

    public function rules()
    {
        return [
            [['name'], 'required'],
            [['name'], 'string', 'max' => 1000],
        ];
    }

    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'Название отдела',
            'auditoriumsList' => 'Список помещений',
            'workerList' => 'Список сотрудников',
        ];
    }

    public function getAuditoriumsList()
    {
        $auds = Auditorium::find()->where(['branch_id' => $this->id])->all();
        $result = '';
        foreach ($auds as $aud)
        {
            $result .= Html::a($aud->name.' ('.$aud->text.')', \yii\helpers\Url::to(['auditorium/view', 'id' => $aud->id])).'<br>';
        }
        return $result;
    }

    public function getWorkerList()
    {
        $workers = People::find()->where(['branch_id' => $this->id])->all();
        $result = '';
        foreach ($workers as $worker)
        {
            $result .= Html::a($worker->getFullNameBranch($this->id), \yii\helpers\Url::to(['people/view', 'id' => $worker->id])).'<br>';
        }
        return $result;
    }

    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
        if ($this->auditoriums !== null && $this->auditoriums[0]->name !== '')
        {
            foreach ($this->auditoriums as $auditorium)
            {
                $newAuds = new Auditorium();
                $newAuds->branch_id = $this->id;
                $newAuds->name = $auditorium->name;
                $newAuds->square = $auditorium->square;
                $newAuds->is_education = $auditorium->is_education;
                $newAuds->save(false);
            }
        }
    }
}
