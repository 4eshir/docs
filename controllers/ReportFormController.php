<?php

namespace app\controllers;

use app\models\components\ExcelWizard;
use app\models\components\Logger;
use app\models\components\RoleBaseAccess;
use app\models\components\UserRBAC;
use app\models\extended\ForeignEventReportModel;
use app\models\extended\ReportFormModel;
use app\models\extended\ManHoursReportModel;
use app\models\extended\ResultReportModel;
use app\models\extended\UsefulSideReportModel;
use Yii;
use app\models\work\PositionWork;
use app\models\SearchPosition;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\filters\VerbFilter;

/**
 * PositionController implements the CRUD actions for Position model.
 */
class ReportFormController extends Controller
{
    /**
     * {@inheritdoc}
     */
    public function behaviors()
    {
        return [
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'delete' => ['POST'],
                ],
            ],
        ];
    }


    /**
     * Displays a single Position model.
     * @param integer $id
     * @return mixed
     * @throws NotFoundHttpException if the model cannot be found
     */

    public function actionIndex()
    {
        return $this->render('index');
    }

    public function actionEffectiveContract()
    {
        $model = new ForeignEventReportModel();

        if ($model->load(Yii::$app->request->post()) && $model->save()) {
            ExcelWizard::DownloadEffectiveContract($model->start_date, $model->end_date, $model->budget);
        }

        return $this->render('effective-contract', [
            'model' => $model,
        ]);
    }

    public function actionDoDop1()
    {
        $model = new ForeignEventReportModel();

        if ($model->load(Yii::$app->request->post()) && $model->save()) {
            ExcelWizard::DownloadDoDop1($model->start_date, $model->end_date, $model->budget);
        }

        return $this->render('do-dop-1', [
            'model' => $model,
        ]);
    }

    public function actionGz()
    {
        $model = new ReportFormModel();

        if ($model->load(Yii::$app->request->post()) && $model->save()) {
            ExcelWizard::DownloadGZ($model->start_date, $model->end_date, $model->method);
        }

        return $this->render('gz', [
            'model' => $model,
        ]);
    }

    public function actionDo()
    {
        $model = new ReportFormModel();

        if ($model->load(Yii::$app->request->post()) && $model->save()) {
            ExcelWizard::DownloadDO($model->start_date, $model->end_date);
        }

        return $this->render('do', [
            'model' => $model,
        ]);
    }

    public function actionTeacher()
    {
        $model = new ReportFormModel();

        if ($model->load(Yii::$app->request->post())) {
            ExcelWizard::DownloadTeacher($model->year, $model->branch);
        }

        return $this->render('teacher', [
            'model' => $model,
        ]);
    }


    //Проверка на права доступа к CRUD-операциям
    public function beforeAction($action)
    {
        if (Yii::$app->user->isGuest)
            return $this->redirect(['/site/login']);
        if (!RoleBaseAccess::CheckAccess($action->controller->id, $action->id, Yii::$app->user->identity->getId(), "group")) {
            return $this->redirect(['/site/error-access']);
        }
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }
}
